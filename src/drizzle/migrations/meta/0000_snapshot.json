{
  "id": "4c362aca-c5d7-46a7-8903-10e435613024",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.activityLogs": {
      "name": "activityLogs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "actorUserId": {
          "name": "actorUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "action": {
          "name": "action",
          "type": "activityActionEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "targetTable": {
          "name": "targetTable",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": true
        },
        "targetId": {
          "name": "targetId",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(512)",
          "primaryKey": false,
          "notNull": false
        },
        "changes": {
          "name": "changes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "ipAddress": {
          "name": "ipAddress",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "userAgent": {
          "name": "userAgent",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "activityLogs_organizationId_index": {
          "name": "activityLogs_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activityLogs_actorUserId_index": {
          "name": "activityLogs_actorUserId_index",
          "columns": [
            {
              "expression": "actorUserId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activityLogs_target_index": {
          "name": "activityLogs_target_index",
          "columns": [
            {
              "expression": "targetTable",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "targetId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activityLogs_action_index": {
          "name": "activityLogs_action_index",
          "columns": [
            {
              "expression": "action",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activityLogs_createdAt_index": {
          "name": "activityLogs_createdAt_index",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "activityLogs_organizationId_organizations_id_fk": {
          "name": "activityLogs_organizationId_organizations_id_fk",
          "tableFrom": "activityLogs",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "activityLogs_actorUserId_users_id_fk": {
          "name": "activityLogs_actorUserId_users_id_fk",
          "tableFrom": "activityLogs",
          "tableTo": "users",
          "columnsFrom": [
            "actorUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.amenities": {
      "name": "amenities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "amenities_organizationId_name_unique": {
          "name": "amenities_organizationId_name_unique",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "amenities_organizationId_organizations_id_fk": {
          "name": "amenities_organizationId_organizations_id_fk",
          "tableFrom": "amenities",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invites": {
      "name": "invites",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "varchar(320)",
          "primaryKey": false,
          "notNull": true
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "userRoleEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "invitedByUserId": {
          "name": "invitedByUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "token": {
          "name": "token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "isUsed": {
          "name": "isUsed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "usedAt": {
          "name": "usedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "invites_token_unique": {
          "name": "invites_token_unique",
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invites_email_index": {
          "name": "invites_email_index",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invites_organizationId_index": {
          "name": "invites_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invites_expiresAt_index": {
          "name": "invites_expiresAt_index",
          "columns": [
            {
              "expression": "expiresAt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invites_isUsed_index": {
          "name": "invites_isUsed_index",
          "columns": [
            {
              "expression": "isUsed",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invites_organizationId_organizations_id_fk": {
          "name": "invites_organizationId_organizations_id_fk",
          "tableFrom": "invites",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invites_invitedByUserId_users_id_fk": {
          "name": "invites_invitedByUserId_users_id_fk",
          "tableFrom": "invites",
          "tableTo": "users",
          "columnsFrom": [
            "invitedByUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invoiceItems": {
      "name": "invoiceItems",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "invoiceId": {
          "name": "invoiceId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unitPrice": {
          "name": "unitPrice",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "lineTotal": {
          "name": "lineTotal",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "invoiceItems_invoiceId_index": {
          "name": "invoiceItems_invoiceId_index",
          "columns": [
            {
              "expression": "invoiceId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoiceItems_invoiceId_invoices_id_fk": {
          "name": "invoiceItems_invoiceId_invoices_id_fk",
          "tableFrom": "invoiceItems",
          "tableTo": "invoices",
          "columnsFrom": [
            "invoiceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invoices": {
      "name": "invoices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "leaseId": {
          "name": "leaseId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "invoiceNumber": {
          "name": "invoiceNumber",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "invoiceStatusEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'issued'"
        },
        "issueDate": {
          "name": "issueDate",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "dueDate": {
          "name": "dueDate",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'KES'"
        },
        "subtotalAmount": {
          "name": "subtotalAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "taxAmount": {
          "name": "taxAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "totalAmount": {
          "name": "totalAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "balanceAmount": {
          "name": "balanceAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "invoices_organizationId_invoiceNumber_unique": {
          "name": "invoices_organizationId_invoiceNumber_unique",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "invoiceNumber",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_leaseId_index": {
          "name": "invoices_leaseId_index",
          "columns": [
            {
              "expression": "leaseId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_status_index": {
          "name": "invoices_status_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_dueDate_index": {
          "name": "invoices_dueDate_index",
          "columns": [
            {
              "expression": "dueDate",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_organizationId_organizations_id_fk": {
          "name": "invoices_organizationId_organizations_id_fk",
          "tableFrom": "invoices",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoices_leaseId_leases_id_fk": {
          "name": "invoices_leaseId_leases_id_fk",
          "tableFrom": "invoices",
          "tableTo": "leases",
          "columnsFrom": [
            "leaseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.leases": {
      "name": "leases",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "propertyId": {
          "name": "propertyId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "unitId": {
          "name": "unitId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantUserId": {
          "name": "tenantUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "leaseStatusEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "startDate": {
          "name": "startDate",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "endDate": {
          "name": "endDate",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "rentAmount": {
          "name": "rentAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "depositAmount": {
          "name": "depositAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "dueDayOfMonth": {
          "name": "dueDayOfMonth",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "billingCurrency": {
          "name": "billingCurrency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'KES'"
        },
        "lateFeePercent": {
          "name": "lateFeePercent",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "leases_unitId_active_index": {
          "name": "leases_unitId_active_index",
          "columns": [
            {
              "expression": "unitId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "leases_organizationId_index": {
          "name": "leases_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "leases_tenantUserId_index": {
          "name": "leases_tenantUserId_index",
          "columns": [
            {
              "expression": "tenantUserId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "leases_organizationId_organizations_id_fk": {
          "name": "leases_organizationId_organizations_id_fk",
          "tableFrom": "leases",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "leases_propertyId_properties_id_fk": {
          "name": "leases_propertyId_properties_id_fk",
          "tableFrom": "leases",
          "tableTo": "properties",
          "columnsFrom": [
            "propertyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "leases_unitId_units_id_fk": {
          "name": "leases_unitId_units_id_fk",
          "tableFrom": "leases",
          "tableTo": "units",
          "columnsFrom": [
            "unitId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "leases_tenantUserId_users_id_fk": {
          "name": "leases_tenantUserId_users_id_fk",
          "tableFrom": "leases",
          "tableTo": "users",
          "columnsFrom": [
            "tenantUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.maintenanceAttachments": {
      "name": "maintenanceAttachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "maintenanceRequestId": {
          "name": "maintenanceRequestId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "fileUrl": {
          "name": "fileUrl",
          "type": "varchar(1024)",
          "primaryKey": false,
          "notNull": true
        },
        "fileName": {
          "name": "fileName",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "contentType": {
          "name": "contentType",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": false
        },
        "sizeBytes": {
          "name": "sizeBytes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "maintenanceAttachments_maintenanceRequestId_index": {
          "name": "maintenanceAttachments_maintenanceRequestId_index",
          "columns": [
            {
              "expression": "maintenanceRequestId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "maintenanceAttachments_maintenanceRequestId_maintenanceRequests_id_fk": {
          "name": "maintenanceAttachments_maintenanceRequestId_maintenanceRequests_id_fk",
          "tableFrom": "maintenanceAttachments",
          "tableTo": "maintenanceRequests",
          "columnsFrom": [
            "maintenanceRequestId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.maintenanceComments": {
      "name": "maintenanceComments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "maintenanceRequestId": {
          "name": "maintenanceRequestId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "authorUserId": {
          "name": "authorUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "body": {
          "name": "body",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "maintenanceComments_maintenanceRequestId_index": {
          "name": "maintenanceComments_maintenanceRequestId_index",
          "columns": [
            {
              "expression": "maintenanceRequestId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "maintenanceComments_maintenanceRequestId_maintenanceRequests_id_fk": {
          "name": "maintenanceComments_maintenanceRequestId_maintenanceRequests_id_fk",
          "tableFrom": "maintenanceComments",
          "tableTo": "maintenanceRequests",
          "columnsFrom": [
            "maintenanceRequestId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "maintenanceComments_authorUserId_users_id_fk": {
          "name": "maintenanceComments_authorUserId_users_id_fk",
          "tableFrom": "maintenanceComments",
          "tableTo": "users",
          "columnsFrom": [
            "authorUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.maintenanceRequests": {
      "name": "maintenanceRequests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "propertyId": {
          "name": "propertyId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "unitId": {
          "name": "unitId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "createdByUserId": {
          "name": "createdByUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assignedToUserId": {
          "name": "assignedToUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "maintenanceStatusEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'open'"
        },
        "priority": {
          "name": "priority",
          "type": "priorityEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'medium'"
        },
        "scheduledAt": {
          "name": "scheduledAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "resolvedAt": {
          "name": "resolvedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "costAmount": {
          "name": "costAmount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "maintenanceRequests_organizationId_index": {
          "name": "maintenanceRequests_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "maintenanceRequests_propertyId_index": {
          "name": "maintenanceRequests_propertyId_index",
          "columns": [
            {
              "expression": "propertyId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "maintenanceRequests_status_index": {
          "name": "maintenanceRequests_status_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "maintenanceRequests_assignedToUserId_index": {
          "name": "maintenanceRequests_assignedToUserId_index",
          "columns": [
            {
              "expression": "assignedToUserId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "maintenanceRequests_priority_index": {
          "name": "maintenanceRequests_priority_index",
          "columns": [
            {
              "expression": "priority",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "maintenanceRequests_organizationId_organizations_id_fk": {
          "name": "maintenanceRequests_organizationId_organizations_id_fk",
          "tableFrom": "maintenanceRequests",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "maintenanceRequests_propertyId_properties_id_fk": {
          "name": "maintenanceRequests_propertyId_properties_id_fk",
          "tableFrom": "maintenanceRequests",
          "tableTo": "properties",
          "columnsFrom": [
            "propertyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "maintenanceRequests_unitId_units_id_fk": {
          "name": "maintenanceRequests_unitId_units_id_fk",
          "tableFrom": "maintenanceRequests",
          "tableTo": "units",
          "columnsFrom": [
            "unitId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "maintenanceRequests_createdByUserId_users_id_fk": {
          "name": "maintenanceRequests_createdByUserId_users_id_fk",
          "tableFrom": "maintenanceRequests",
          "tableTo": "users",
          "columnsFrom": [
            "createdByUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "maintenanceRequests_assignedToUserId_users_id_fk": {
          "name": "maintenanceRequests_assignedToUserId_users_id_fk",
          "tableFrom": "maintenanceRequests",
          "tableTo": "users",
          "columnsFrom": [
            "assignedToUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mfaBackupCodes": {
      "name": "mfaBackupCodes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "varchar(16)",
          "primaryKey": false,
          "notNull": true
        },
        "isUsed": {
          "name": "isUsed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "usedAt": {
          "name": "usedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "mfaBackupCodes_userId_index": {
          "name": "mfaBackupCodes_userId_index",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfaBackupCodes_isUsed_index": {
          "name": "mfaBackupCodes_isUsed_index",
          "columns": [
            {
              "expression": "isUsed",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfaBackupCodes_userId_users_id_fk": {
          "name": "mfaBackupCodes_userId_users_id_fk",
          "tableFrom": "mfaBackupCodes",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizationSettings": {
      "name": "organizationSettings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "managerCanCreateProperties": {
          "name": "managerCanCreateProperties",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "managerCanDeleteProperties": {
          "name": "managerCanDeleteProperties",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "managerCanInviteUsers": {
          "name": "managerCanInviteUsers",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "managerMaxProperties": {
          "name": "managerMaxProperties",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "mfaRequired": {
          "name": "mfaRequired",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "defaultCurrency": {
          "name": "defaultCurrency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "'KES'"
        },
        "timezone": {
          "name": "timezone",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false,
          "default": "'Africa/Nairobi'"
        },
        "invoiceDueDays": {
          "name": "invoiceDueDays",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 30
        },
        "lateFeeEnabled": {
          "name": "lateFeeEnabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "lateFeePercent": {
          "name": "lateFeePercent",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'5.00'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "organizationSettings_organizationId_unique": {
          "name": "organizationSettings_organizationId_unique",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "organizationSettings_organizationId_organizations_id_fk": {
          "name": "organizationSettings_organizationId_organizations_id_fk",
          "tableFrom": "organizationSettings",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "legalName": {
          "name": "legalName",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "taxId": {
          "name": "taxId",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "organizations_name_unique": {
          "name": "organizations_name_unique",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.paymentAllocations": {
      "name": "paymentAllocations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "paymentId": {
          "name": "paymentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "invoiceId": {
          "name": "invoiceId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amountApplied": {
          "name": "amountApplied",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "paymentAllocations_paymentId_invoiceId_unique": {
          "name": "paymentAllocations_paymentId_invoiceId_unique",
          "columns": [
            {
              "expression": "paymentId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "invoiceId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "paymentAllocations_invoiceId_index": {
          "name": "paymentAllocations_invoiceId_index",
          "columns": [
            {
              "expression": "invoiceId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "paymentAllocations_paymentId_payments_id_fk": {
          "name": "paymentAllocations_paymentId_payments_id_fk",
          "tableFrom": "paymentAllocations",
          "tableTo": "payments",
          "columnsFrom": [
            "paymentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "paymentAllocations_invoiceId_invoices_id_fk": {
          "name": "paymentAllocations_invoiceId_invoices_id_fk",
          "tableFrom": "paymentAllocations",
          "tableTo": "invoices",
          "columnsFrom": [
            "invoiceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.payments": {
      "name": "payments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "leaseId": {
          "name": "leaseId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "receivedFromUserId": {
          "name": "receivedFromUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "receivedByUserId": {
          "name": "receivedByUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "method": {
          "name": "method",
          "type": "paymentMethodEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'cash'"
        },
        "status": {
          "name": "status",
          "type": "paymentStatusEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'completed'"
        },
        "amount": {
          "name": "amount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'KES'"
        },
        "referenceCode": {
          "name": "referenceCode",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": false
        },
        "narrative": {
          "name": "narrative",
          "type": "varchar(512)",
          "primaryKey": false,
          "notNull": false
        },
        "receivedAt": {
          "name": "receivedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "payments_organizationId_index": {
          "name": "payments_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_method_index": {
          "name": "payments_method_index",
          "columns": [
            {
              "expression": "method",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_status_index": {
          "name": "payments_status_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_leaseId_index": {
          "name": "payments_leaseId_index",
          "columns": [
            {
              "expression": "leaseId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "payments_referenceCode_index": {
          "name": "payments_referenceCode_index",
          "columns": [
            {
              "expression": "referenceCode",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "payments_organizationId_organizations_id_fk": {
          "name": "payments_organizationId_organizations_id_fk",
          "tableFrom": "payments",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "payments_leaseId_leases_id_fk": {
          "name": "payments_leaseId_leases_id_fk",
          "tableFrom": "payments",
          "tableTo": "leases",
          "columnsFrom": [
            "leaseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "payments_receivedFromUserId_users_id_fk": {
          "name": "payments_receivedFromUserId_users_id_fk",
          "tableFrom": "payments",
          "tableTo": "users",
          "columnsFrom": [
            "receivedFromUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "payments_receivedByUserId_users_id_fk": {
          "name": "payments_receivedByUserId_users_id_fk",
          "tableFrom": "payments",
          "tableTo": "users",
          "columnsFrom": [
            "receivedByUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.permissionTemplates": {
      "name": "permissionTemplates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "isSystem": {
          "name": "isSystem",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "permissionTemplates_name_organizationId_unique": {
          "name": "permissionTemplates_name_organizationId_unique",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "permissionTemplates_organizationId_index": {
          "name": "permissionTemplates_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "permissionTemplates_organizationId_organizations_id_fk": {
          "name": "permissionTemplates_organizationId_organizations_id_fk",
          "tableFrom": "permissionTemplates",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.properties": {
      "name": "properties",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "addressLine1": {
          "name": "addressLine1",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "addressLine2": {
          "name": "addressLine2",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": false
        },
        "postalCode": {
          "name": "postalCode",
          "type": "varchar(32)",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": false
        },
        "timezone": {
          "name": "timezone",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "createdByUserId": {
          "name": "createdByUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "properties_organizationId_name_unique": {
          "name": "properties_organizationId_name_unique",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "properties_organizationId_index": {
          "name": "properties_organizationId_index",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "properties_createdByUserId_index": {
          "name": "properties_createdByUserId_index",
          "columns": [
            {
              "expression": "createdByUserId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "properties_organizationId_organizations_id_fk": {
          "name": "properties_organizationId_organizations_id_fk",
          "tableFrom": "properties",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "properties_createdByUserId_users_id_fk": {
          "name": "properties_createdByUserId_users_id_fk",
          "tableFrom": "properties",
          "tableTo": "users",
          "columnsFrom": [
            "createdByUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.propertyManagers": {
      "name": "propertyManagers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "propertyId": {
          "name": "propertyId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "userRoleEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'manager'"
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "propertyManagers_propertyId_userId_unique": {
          "name": "propertyManagers_propertyId_userId_unique",
          "columns": [
            {
              "expression": "propertyId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "propertyManagers_userId_index": {
          "name": "propertyManagers_userId_index",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "propertyManagers_propertyId_properties_id_fk": {
          "name": "propertyManagers_propertyId_properties_id_fk",
          "tableFrom": "propertyManagers",
          "tableTo": "properties",
          "columnsFrom": [
            "propertyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "propertyManagers_userId_users_id_fk": {
          "name": "propertyManagers_userId_users_id_fk",
          "tableFrom": "propertyManagers",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.receipts": {
      "name": "receipts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "paymentId": {
          "name": "paymentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "receiptNumber": {
          "name": "receiptNumber",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "issuedAt": {
          "name": "issuedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "receipts_organizationId_receiptNumber_unique": {
          "name": "receipts_organizationId_receiptNumber_unique",
          "columns": [
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "receiptNumber",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "receipts_paymentId_unique": {
          "name": "receipts_paymentId_unique",
          "columns": [
            {
              "expression": "paymentId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "receipts_organizationId_organizations_id_fk": {
          "name": "receipts_organizationId_organizations_id_fk",
          "tableFrom": "receipts",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "receipts_paymentId_payments_id_fk": {
          "name": "receipts_paymentId_payments_id_fk",
          "tableFrom": "receipts",
          "tableTo": "payments",
          "columnsFrom": [
            "paymentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.refreshTokens": {
      "name": "refreshTokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "varchar(512)",
          "primaryKey": false,
          "notNull": true
        },
        "deviceId": {
          "name": "deviceId",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "userAgent": {
          "name": "userAgent",
          "type": "varchar(512)",
          "primaryKey": false,
          "notNull": false
        },
        "ipAddress": {
          "name": "ipAddress",
          "type": "varchar(45)",
          "primaryKey": false,
          "notNull": false
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "isRevoked": {
          "name": "isRevoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "revokedAt": {
          "name": "revokedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "refreshTokens_token_unique": {
          "name": "refreshTokens_token_unique",
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refreshTokens_userId_index": {
          "name": "refreshTokens_userId_index",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refreshTokens_deviceId_index": {
          "name": "refreshTokens_deviceId_index",
          "columns": [
            {
              "expression": "deviceId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refreshTokens_expiresAt_index": {
          "name": "refreshTokens_expiresAt_index",
          "columns": [
            {
              "expression": "expiresAt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refreshTokens_isRevoked_index": {
          "name": "refreshTokens_isRevoked_index",
          "columns": [
            {
              "expression": "isRevoked",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refreshTokens_userId_users_id_fk": {
          "name": "refreshTokens_userId_users_id_fk",
          "tableFrom": "refreshTokens",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.unitAmenities": {
      "name": "unitAmenities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "unitId": {
          "name": "unitId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amenityId": {
          "name": "amenityId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "unitAmenities_unitId_amenityId_unique": {
          "name": "unitAmenities_unitId_amenityId_unique",
          "columns": [
            {
              "expression": "unitId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "amenityId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "unitAmenities_unitId_units_id_fk": {
          "name": "unitAmenities_unitId_units_id_fk",
          "tableFrom": "unitAmenities",
          "tableTo": "units",
          "columnsFrom": [
            "unitId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "unitAmenities_amenityId_amenities_id_fk": {
          "name": "unitAmenities_amenityId_amenities_id_fk",
          "tableFrom": "unitAmenities",
          "tableTo": "amenities",
          "columnsFrom": [
            "amenityId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.units": {
      "name": "units",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "propertyId": {
          "name": "propertyId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "floor": {
          "name": "floor",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "bedrooms": {
          "name": "bedrooms",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "bathrooms": {
          "name": "bathrooms",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "sizeSqm": {
          "name": "sizeSqm",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "baseRent": {
          "name": "baseRent",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "status": {
          "name": "status",
          "type": "unitStatusEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'vacant'"
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "units_propertyId_code_unique": {
          "name": "units_propertyId_code_unique",
          "columns": [
            {
              "expression": "propertyId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "units_propertyId_index": {
          "name": "units_propertyId_index",
          "columns": [
            {
              "expression": "propertyId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "units_status_index": {
          "name": "units_status_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "units_propertyId_properties_id_fk": {
          "name": "units_propertyId_properties_id_fk",
          "tableFrom": "units",
          "tableTo": "properties",
          "columnsFrom": [
            "propertyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.userAuth": {
      "name": "userAuth",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(320)",
          "primaryKey": false,
          "notNull": true
        },
        "passwordHash": {
          "name": "passwordHash",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "isEmailVerified": {
          "name": "isEmailVerified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "lastLoginAt": {
          "name": "lastLoginAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "verificationToken": {
          "name": "verificationToken",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "resetToken": {
          "name": "resetToken",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "resetTokenExpiresAt": {
          "name": "resetTokenExpiresAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "mfaSecret": {
          "name": "mfaSecret",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "mfaEnabled": {
          "name": "mfaEnabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "userAuth_email_unique": {
          "name": "userAuth_email_unique",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userAuth_userId_unique": {
          "name": "userAuth_userId_unique",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userAuth_verificationToken_index": {
          "name": "userAuth_verificationToken_index",
          "columns": [
            {
              "expression": "verificationToken",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userAuth_resetToken_index": {
          "name": "userAuth_resetToken_index",
          "columns": [
            {
              "expression": "resetToken",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "userAuth_userId_users_id_fk": {
          "name": "userAuth_userId_users_id_fk",
          "tableFrom": "userAuth",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.userOrganizations": {
      "name": "userOrganizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "userRoleEnum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'tenant'"
        },
        "isPrimary": {
          "name": "isPrimary",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "userOrganizations_userId_organizationId_unique": {
          "name": "userOrganizations_userId_organizationId_unique",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organizationId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userOrganizations_role_index": {
          "name": "userOrganizations_role_index",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userOrganizations_isPrimary_index": {
          "name": "userOrganizations_isPrimary_index",
          "columns": [
            {
              "expression": "isPrimary",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "userOrganizations_userId_users_id_fk": {
          "name": "userOrganizations_userId_users_id_fk",
          "tableFrom": "userOrganizations",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "userOrganizations_organizationId_organizations_id_fk": {
          "name": "userOrganizations_organizationId_organizations_id_fk",
          "tableFrom": "userOrganizations",
          "tableTo": "organizations",
          "columnsFrom": [
            "organizationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "fullName": {
          "name": "fullName",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(320)",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "avatarUrl": {
          "name": "avatarUrl",
          "type": "varchar(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "users_email_unique": {
          "name": "users_email_unique",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_phone_index": {
          "name": "users_phone_index",
          "columns": [
            {
              "expression": "phone",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.activityActionEnum": {
      "name": "activityActionEnum",
      "schema": "public",
      "values": [
        "create",
        "update",
        "delete",
        "statusChange",
        "assign",
        "unassign",
        "comment",
        "payment",
        "issueInvoice",
        "voidInvoice",
        "login",
        "logout",
        "permissionChange"
      ]
    },
    "public.invoiceStatusEnum": {
      "name": "invoiceStatusEnum",
      "schema": "public",
      "values": [
        "draft",
        "issued",
        "partiallyPaid",
        "paid",
        "void",
        "overdue"
      ]
    },
    "public.leaseStatusEnum": {
      "name": "leaseStatusEnum",
      "schema": "public",
      "values": [
        "draft",
        "active",
        "pendingMoveIn",
        "ended",
        "terminated",
        "cancelled"
      ]
    },
    "public.maintenanceStatusEnum": {
      "name": "maintenanceStatusEnum",
      "schema": "public",
      "values": [
        "open",
        "inProgress",
        "onHold",
        "resolved",
        "closed",
        "cancelled"
      ]
    },
    "public.paymentMethodEnum": {
      "name": "paymentMethodEnum",
      "schema": "public",
      "values": [
        "cash",
        "mpesa",
        "bankTransfer",
        "card",
        "cheque",
        "other"
      ]
    },
    "public.paymentStatusEnum": {
      "name": "paymentStatusEnum",
      "schema": "public",
      "values": [
        "pending",
        "completed",
        "failed",
        "refunded",
        "cancelled"
      ]
    },
    "public.priorityEnum": {
      "name": "priorityEnum",
      "schema": "public",
      "values": [
        "low",
        "medium",
        "high",
        "urgent"
      ]
    },
    "public.unitStatusEnum": {
      "name": "unitStatusEnum",
      "schema": "public",
      "values": [
        "vacant",
        "reserved",
        "occupied",
        "unavailable"
      ]
    },
    "public.userRoleEnum": {
      "name": "userRoleEnum",
      "schema": "public",
      "values": [
        "tenant",
        "caretaker",
        "manager",
        "propertyOwner",
        "admin",
        "superAdmin"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}